cmake_minimum_required(VERSION 3.5.0)

# GLOBAL_LIB_PFX and GLOBAL_TEST_PFX are set at the level above
# message(GLOBAL_LIB_PFX: ${GLOBAL_LIB_PFX})
# message(GLOBAL_TEST_PFX: ${GLOBAL_TEST_PFX})

add_library(${GLOBAL_LIB_PFX}charmap STATIC ./charmap.cpp ./maze.cpp ./charmap.h)
add_library(${GLOBAL_LIB_PFX}math STATIC ./math.cpp ./math.h)

enable_testing()

set(TARGET_NAME ${GLOBAL_TEST_PFX}charmap)
add_executable(${TARGET_NAME} test/test_charmap.cpp)
target_link_libraries(${TARGET_NAME} ${GLOBAL_LIB_PFX}charmap)
set_cxx_20(${TARGET_NAME})
add_test(NAME ${GLOBAL_TEST_PFX}charmap_direction_as_string COMMAND $<TARGET_FILE:${TARGET_NAME}> direction_as_string)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_position_as_string COMMAND $<TARGET_FILE:${TARGET_NAME}> position_as_string)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_abscissa_const COMMAND $<TARGET_FILE:${TARGET_NAME}> abscissa_const)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_abscissa COMMAND $<TARGET_FILE:${TARGET_NAME}> abscissa)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_ordinate_const COMMAND $<TARGET_FILE:${TARGET_NAME}> ordinate_const)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_ordinate COMMAND $<TARGET_FILE:${TARGET_NAME}> ordinate)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_horizontal_distance_gt COMMAND $<TARGET_FILE:${TARGET_NAME}> horizontal_distance_gt)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_horizontal_distance_lt COMMAND $<TARGET_FILE:${TARGET_NAME}> horizontal_distance_lt)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_horizontal_distance_eq COMMAND $<TARGET_FILE:${TARGET_NAME}> horizontal_distance_eq)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_vertical_distance_gt COMMAND $<TARGET_FILE:${TARGET_NAME}> vertical_distance_gt)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_vertical_distance_lt COMMAND $<TARGET_FILE:${TARGET_NAME}> vertical_distance_lt)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_vertical_distance_eq COMMAND $<TARGET_FILE:${TARGET_NAME}> vertical_distance_eq)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_horizontal_distance_five COMMAND $<TARGET_FILE:${TARGET_NAME}> horizontal_distance_five)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_vertical_distance_five COMMAND $<TARGET_FILE:${TARGET_NAME}> vertical_distance_five)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_access-const COMMAND $<TARGET_FILE:${TARGET_NAME}> access-const)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_access-exception COMMAND $<TARGET_FILE:${TARGET_NAME}> access-const)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_access-reference COMMAND $<TARGET_FILE:${TARGET_NAME}> access-reference)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_char_find COMMAND $<TARGET_FILE:${TARGET_NAME}> char_find)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_char_find-direction-SOUTH COMMAND $<TARGET_FILE:${TARGET_NAME}> char_find-direction-SOUTH)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_char_find-direction-NORTH COMMAND $<TARGET_FILE:${TARGET_NAME}> char_find-direction-NORTH)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_char_find-direction-EAST COMMAND $<TARGET_FILE:${TARGET_NAME}> char_find-direction-EAST)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_char_find-direction-WEST COMMAND $<TARGET_FILE:${TARGET_NAME}> char_find-direction-WEST)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_column_as_string COMMAND $<TARGET_FILE:${TARGET_NAME}> column_as_string)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-SOUTH COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-SOUTH)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-NORTH COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-NORTH)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-EAST COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-EAST)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-WEST COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-WEST)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-char_val_is COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-char_val_is)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-char_val_is-no_match COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-char_val_is-no_match)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-char_pos_is COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-char_val_is)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-char_pos_is-no_match COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-char_val_is-no_match)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-only-NSEW COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-only-NSEW)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-only-NSEW-Order-EAST-NORTH-WEST-SOUTH COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-only-NSEW-Order-EAST-NORTH-WEST-SOUTH)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_neighbours_if-out-of-range COMMAND $<TARGET_FILE:${TARGET_NAME}> neighbours_if-out-of-range)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_row_as_string COMMAND $<TARGET_FILE:${TARGET_NAME}> row_as_string)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-bottom_left COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-bottom_left)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-bottom_right COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-bottom_right)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-out_of_bounds COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-out_of_bounds)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-out_of_bounds-truncate COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-out_of_bounds-truncate)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-out_of_bounds-truncate-empty COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-out_of_bounds-truncate-empty)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-top_left COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-top_left)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset-top_right COMMAND $<TARGET_FILE:${TARGET_NAME}> subset-top_right)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-horizontal COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-horizontal)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-horizontal-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-horizontal-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-one COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-one)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-one-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-one-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-rect COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-rect)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-rect-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-rect-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-vertical COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-vertical)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-vertical-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-vertical-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-whole COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-whole)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_find-whole-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_find-whole-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-bottom_left-2-3 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-bottom_left-2-3)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-bottom_left-2-3-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-bottom_left-2-3-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-bottom_middle-3-3 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-bottom_middle-3-3)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-not-bottom_middle-3-3 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-not-bottom_middle-3-3)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-bottom_middle-3-3-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-bottom_middle-3-3-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-not-bottom_middle-3-3-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-not-bottom_middle-3-3-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-bottom_right-3-2 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-bottom_right-3-2)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-one COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-one)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-not-one COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-not-one)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-one-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-one-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-out_of_bounds COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-out_of_bounds)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-out_of_bounds-truncate COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-out_of_bounds-truncate)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-out_of_bounds-truncate-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-out_of_bounds-truncate-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-out_of_bounds-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-out_of_bounds-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-top_left-3-2 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-top_left-3-2)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-not-top_left-3-2 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-not-top_left-3-2)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-top_left-3-2-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-top_left-3-2-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-top_right-2-3 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-top_right-2-3)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_matches-top_right-2-3-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_matches-top_right-2-3-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_matches-out_of_bounds COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_matches-out_of_bounds)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_matches-one COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_matches-one)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_matches-not-one COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_matches-not-one)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_matches-3x3 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_matches-3x3)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_matches-not-3x3 COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_matches-not-3x3)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_replace COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_replace)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_replace-out_of_bounds COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_replace-out_of_bounds)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_replace-out_of_bounds-truncate COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_replace-out_of_bounds-truncate)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_replace-out_of_bounds-truncate-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_replace-out_of_bounds-truncate-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_replace-wild_character COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_replace-wild_character)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_replace COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_replace)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_subset_quick_replace-out_of_bounds COMMAND $<TARGET_FILE:${TARGET_NAME}> subset_quick_replace-out_of_bounds)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_diff_count COMMAND $<TARGET_FILE:${TARGET_NAME}> diff_count)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_transpose COMMAND $<TARGET_FILE:${TARGET_NAME}> transpose)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_rotate_clockwise COMMAND $<TARGET_FILE:${TARGET_NAME}> rotate_clockwise)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_rotate_counter_clockwise COMMAND $<TARGET_FILE:${TARGET_NAME}> rotate_counter_clockwise)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_inverse COMMAND $<TARGET_FILE:${TARGET_NAME}> inverse)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_operator<< COMMAND $<TARGET_FILE:${TARGET_NAME}> operator<<)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_operator>> COMMAND $<TARGET_FILE:${TARGET_NAME}> operator>>)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-new-maze_node COMMAND $<TARGET_FILE:${TARGET_NAME}> new-maze_node)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-new-maze_node-values COMMAND $<TARGET_FILE:${TARGET_NAME}> new-maze_node-values)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-new-maze_node-copy COMMAND $<TARGET_FILE:${TARGET_NAME}> new-maze_node-copy)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-new-maze_node-assign COMMAND $<TARGET_FILE:${TARGET_NAME}> new-maze_node-assign)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-is_tile_free COMMAND $<TARGET_FILE:${TARGET_NAME}> is_tile_free)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-basic_score_move COMMAND $<TARGET_FILE:${TARGET_NAME}> basic_score_move)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-weighted_turn_score_move COMMAND $<TARGET_FILE:${TARGET_NAME}> weighted_turn_score_move)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_first_nodes-single COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_first_nodes-single)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_first_nodes-dual COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_first_nodes-dual)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_first_nodes-tetra COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_first_nodes-tetra)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_next_nodes-dual COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_next_nodes-dual)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_next_nodes-deadend COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_next_nodes-deadend)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_next_nodes-end COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_next_nodes-end)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_get_next_nodes-loop COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_get_next_nodes-loop)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_first_best_path-basic COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_first_best_path-basic)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_first_best_path-weighted COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_first_best_path-weighted)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_first_best_path-basic-two COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_first_best_path-basic-two)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_all_best_path-basic COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_all_best_path-basic)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_all_best_path-weighted COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_all_best_path-weighted)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_all_best_path-basic-four COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_all_best_path-basic-four)
add_test(NAME ${GLOBAL_TEST_PFX}charmap_maze-maze_maze_find_all_best_path-weighted-two COMMAND $<TARGET_FILE:${TARGET_NAME}> maze_maze_find_all_best_path-weighted-two)

set(TARGET_NAME ${GLOBAL_TEST_PFX}math)
add_executable(${TARGET_NAME} test/test_math.cpp)
target_link_libraries(${TARGET_NAME} ${GLOBAL_LIB_PFX}math)
set_cxx_20(${TARGET_NAME})
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits-zero COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits-zero)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits-3 COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits-3)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits-10 COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits-10)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits-LLONG_MAX COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits-LLONG_MAX)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits_is_even-0 COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits_is_even-0)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits_is_even-123 COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits_is_even-123)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits_is_even-1234 COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits_is_even-1234)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits_is_even-1234567890 COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits_is_even-1234567890)
add_test(NAME ${GLOBAL_TEST_PFX}math_count_digits_is_even-LLONG_MAX COMMAND $<TARGET_FILE:${TARGET_NAME}> count_digits_is_even-LLONG_MAX)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-1 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-1)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-2 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-2)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-3 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-3)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-4 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-4)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-6 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-6)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-12 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-12)
add_test(NAME ${GLOBAL_TEST_PFX}math_factorize-100 COMMAND $<TARGET_FILE:${TARGET_NAME}> factorize-100)
add_test(NAME ${GLOBAL_TEST_PFX}math_is_prime-2 COMMAND $<TARGET_FILE:${TARGET_NAME}> is_prime-2)
add_test(NAME ${GLOBAL_TEST_PFX}math_is_prime-4 COMMAND $<TARGET_FILE:${TARGET_NAME}> is_prime-4)
add_test(NAME ${GLOBAL_TEST_PFX}math_is_coprime-5-9 COMMAND $<TARGET_FILE:${TARGET_NAME}> is_coprime-5-9)
add_test(NAME ${GLOBAL_TEST_PFX}math_is_coprime-6-9 COMMAND $<TARGET_FILE:${TARGET_NAME}> is_coprime-6-9)
add_test(NAME ${GLOBAL_TEST_PFX}math_greatest_common_divisor-48-18 COMMAND $<TARGET_FILE:${TARGET_NAME}> greatest_common_divisor-48-18)
add_test(NAME ${GLOBAL_TEST_PFX}math_greatest_common_divisor-101-103 COMMAND $<TARGET_FILE:${TARGET_NAME}> greatest_common_divisor-101-103)
add_test(NAME ${GLOBAL_TEST_PFX}math_greatest_common_divisor_extended-35-15 COMMAND $<TARGET_FILE:${TARGET_NAME}> greatest_common_divisor_extended-35-15)
add_test(NAME ${GLOBAL_TEST_PFX}math_modular_inverse-3-11 COMMAND $<TARGET_FILE:${TARGET_NAME}> modular_inverse-3-11)
add_test(NAME ${GLOBAL_TEST_PFX}math_modular_inverse_extended-3-11 COMMAND $<TARGET_FILE:${TARGET_NAME}> modular_inverse_extended-3-11)
add_test(NAME ${GLOBAL_TEST_PFX}math_modular_inverse_fermat-3-11 COMMAND $<TARGET_FILE:${TARGET_NAME}> modular_inverse_fermat-3-11)
add_test(NAME ${GLOBAL_TEST_PFX}math_modular_power-2-10-1000 COMMAND $<TARGET_FILE:${TARGET_NAME}> modular_power-2-10-1000)
add_test(NAME ${GLOBAL_TEST_PFX}math_least_common_multiple-12-15 COMMAND $<TARGET_FILE:${TARGET_NAME}> least_common_multiple-12-15)
add_test(NAME ${GLOBAL_TEST_PFX}math_least_common_multiple-vector COMMAND $<TARGET_FILE:${TARGET_NAME}> least_common_multiple-vector)
